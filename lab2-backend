from fastapi import FastAPI, UploadFile, File
from fastapi.responses import JSONResponse
import paho.mqtt.client as mqtt
import os
import boto3
from uuid import uuid4

app = FastAPI()

# Configurație MinIO
MINIO_ENDPOINT = "localhost:9000"
MINIO_ACCESS_KEY = "minioadmin"
MINIO_SECRET_KEY = "minioadmin"
BUCKET_NAME = "images"

# Inițializează clientul MinIO
s3_client = boto3.client(
    "s3",
    endpoint_url=f"http://{MINIO_ENDPOINT}",
    aws_access_key_id=MINIO_ACCESS_KEY,
    aws_secret_access_key=MINIO_SECRET_KEY,
)

# Asigură că bucket-ul există
try:
    s3_client.create_bucket(Bucket=BUCKET_NAME)
except:
    pass

# MQTT Config
MQTT_BROKER = "localhost"
MQTT_PORT = 1883
MQTT_TOPIC = "camera/image"

def on_message(client, userdata, msg):
    """ Callback pentru mesajele MQTT primite """
    image_name = f"{uuid4()}.jpg"
    with open(image_name, "wb") as f:
        f.write(msg.payload)
    
    # Salvează imaginea în MinIO
    s3_client.upload_file(image_name, BUCKET_NAME, image_name)
    os.remove(image_name)
    print(f"Saved {image_name} to MinIO")

mqtt_client = mqtt.Client()
mqtt_client.on_message = on_message
mqtt_client.connect(MQTT_BROKER, MQTT_PORT)
mqtt_client.subscribe(MQTT_TOPIC)
mqtt_client.loop_start()

@app.post("/upload/")
async def upload_image(file: UploadFile = File(...)):
    """ Endpoint pentru upload manual de imagini """
    image_name = f"{uuid4()}.jpg"
    
    with open(image_name, "wb") as f:
        f.write(await file.read())

    # Salvează în MinIO
    s3_client.upload_file(image_name, BUCKET_NAME, image_name)
    os.remove(image_name)

    return JSONResponse(content={"message": "Image uploaded", "filename": image_name})

@app.get("/images/")
def list_images():
    """ Endpoint pentru listarea imaginilor stocate """
    images = [img["Key"] for img in s3_client.list_objects_v2(Bucket=BUCKET_NAME).get("Contents", [])]
    return {"images": images}

@app.get("/images/{image_name}")
def get_image(image_name: str):
    """ Endpoint pentru descărcarea unei imagini """
    return JSONResponse(content={"url": f"http://{MINIO_ENDPOINT}/{BUCKET_NAME}/{image_name}"})
